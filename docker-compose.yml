version: '3.1'

services:
  # recorder:
  #   container_name: 'recorder'
  #   build:
  #     context: ./recorder
  #     dockerfile: ./dockerfile
  #   restart: always
  #   ports:
  #     - 5000:5000
  #   volumes:
  #     - ./data/recorder:/usr/src/app/bin
  #   networks:
  #     - pi_net
  #   healthcheck:
  #     test: ["CMD-SHELL", "curl -f http://localhost:5000/health || exit 1"]
  #     timeout: 10s
  #     interval: 30s
  # relay:
  #   container_name: relay
  #   build:
  #     context: ./relay
  #     dockerfile: ./dockerfile
  #   restart: always
  #   environment:
  #     NODE_ENV: prod
  #     RECORDER_URL: http://recorder:5000
  #     MAX_WRITE_BUFFER: 100
  #   ports:
  #     - 5454:5454
  #   networks:
  #     - pi_net
  #   depends_on:
  #     recorder:
  #       condition: service_healthy
  postgres:
    container_name: postgres
    image: postgres:13.1
    restart: always
    ports:
      - 5432:5432
    volumes:
      - ./data/postgres:/var/lib/postgresql/data:rw
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: farmdata
    networks:
      - pi_net
  mosquitto:
    container_name: 'mosquitto'
    image: 'eclipse-mosquitto:2.0.11'
    restart: always
    ports:
      - 1883:1883
      - 9001:9001
    volumes:
      - ./mosquitto.conf:/mosquitto/config/mosquitto.conf
    depends_on:
      - postgres
    networks:
      - pi_net
  grafana:
    container_name: grafana
    image: grafana/grafana:7.1.5
    restart: always
    ports:
      - 5656:3000
    volumes:
      - ./data/grafana:/var/lib/grafana:rw
    depends_on:
      - postgres
    networks:
      - pi_net
    user: "472"

networks:
  pi_net: